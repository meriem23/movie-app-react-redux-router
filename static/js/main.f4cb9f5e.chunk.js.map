{"version":3,"sources":["Components/AddMovieModal.js","Actions/Actions.js","Actions/Types.js","Components/MovieCard.js","Components/MovieList.js","Components/Filter.js","App.js","serviceWorker.js","Reducers/MovieReducers.js","Reducers/index.js","store.js","Components/Description.js","index.js"],"names":["AddMovieModal","props","handleShow","setState","show","state","handleChange","e","target","name","value","add","newMovie","id","uuidv4","image","year","rating","description","trailer","addNewMovie","editM","EditMovie","movieToEdit","editMode","className","onClick","this","Modal","onHide","Header","closeButton","Title","Body","type","onChange","discription","Footer","Component","connect","dispatch","payload","AddMovie","updatedMovie","deleteM","DeleteMovie","movie","src","starCount","to","class","MovieList","AllData","movies","filter","el","toLowerCase","includes","keyword","trim","map","MovieReducers","Filter","onStarClick","nextValue","prevValue","getRating","text","setKeyword","Form","Control","placeholder","getKeyword","App","Boolean","window","location","hostname","match","initState","action","concat","combineReducers","createStore","rootReducer","__REDUX_DEVTOOLS_EXTENSION__","Description","params","href","style","color","ReactDOM","render","store","exact","path","component","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.f4cb9f5e.chunk.js","sourcesContent":["import React, { Component } from \"react\";\r\nimport { Modal, Button } from \"react-bootstrap\";\r\nimport { AddMovie, EditMovie } from '../Actions/Actions';\r\nimport { connect } from 'react-redux';\r\nimport { v4 as uuidv4 } from 'uuid'\r\n\r\nclass AddMovieModal extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      show: false,\r\n      name: this.props.editMode ? this.props.movieToEdit.name : \"\",\r\n      image: this.props.editMode ? this.props.movieToEdit.image : \"\",\r\n      year: this.props.editMode ? this.props.movieToEdit.year : \"\",\r\n      rating: this.props.editMode ? this.props.movieToEdit.rating : \"\",\r\n      description: this.props.editMode ? this.props.movieToEdit.description : \"\",\r\n      trailer: this.props.editMode ? this.props.movieToEdit.trailer : \"\"\r\n    };\r\n  }\r\n  handleShow = () => {\r\n    this.setState({ show: !this.state.show });\r\n  };\r\n  handleChange = e => {\r\n    this.setState({ [e.target.name]: e.target.value });\r\n  };\r\n  add = () => {\r\n    var newMovie = {\r\n      id: uuidv4(),\r\n      name: this.state.name,\r\n      image: this.state.image,\r\n      year: this.state.year,\r\n      rating: this.state.rating,\r\n      description: this.state.description,\r\n      trailer: this.state.trailer\r\n    };\r\n    this.props.addNewMovie(newMovie);\r\n    this.setState({ show: false });\r\n  };\r\n  editM = () => {\r\n    this.props.EditMovie(this.props.movieToEdit.id, this.state);\r\n    this.setState({ show: false });\r\n  }\r\n  render() {\r\n    return (\r\n      <div>\r\n        {/* <button className=\"editOradd\" onClick={this.handleShow}>\r\n         { this.props.editMode ? \"Edit\" : \"Add Movie\"}\r\n        </button> */}\r\n        <i className=\"far fa-edit editIcon\" onClick={this.handleShow}></i>\r\n        <Modal show={this.state.show} onHide={this.handleShow}>\r\n          <Modal.Header closeButton>\r\n            <Modal.Title>Movie Informations</Modal.Title>\r\n          </Modal.Header>\r\n          <Modal.Body>\r\n            <div>\r\n              <div>\r\n                <label>Title:</label>\r\n                <input type=\"text\" name=\"name\"\r\n                  onChange={this.handleChange}\r\n                  value={this.state.name} />\r\n              </div>\r\n              <div>\r\n                <label>Image:</label>\r\n                <input type=\"text\" name=\"image\"\r\n                  onChange={this.handleChange}\r\n                  value={this.state.image} />\r\n              </div>\r\n              <div>\r\n                <label>Rating:</label>\r\n                <input type=\"text\" name=\"rating\"\r\n                  onChange={this.handleChange}\r\n                  value={this.state.rating} />\r\n              </div>\r\n              <div>\r\n                <label>Year:</label>\r\n                <input type=\"text\" name=\"year\"\r\n                  onChange={this.handleChange}\r\n                  value={this.state.year} />\r\n              </div>\r\n              <div>\r\n                <label>Description:</label>\r\n                <input type=\"text\" name=\"description\"\r\n                  onChange={this.handleChange}\r\n                  value={this.state.discription} />\r\n              </div>\r\n              <div>\r\n                <label>Trailer:</label>\r\n                <input type=\"text\" name=\"trailer\"\r\n                  onChange={this.handleChange}\r\n                  value={this.state.trailer} />\r\n              </div>\r\n            </div>\r\n          </Modal.Body>\r\n          <Modal.Footer>\r\n            {/* <Button variant=\"secondary\" onClick={this.handleShow}>\r\n              Close\r\n            </Button> */}\r\n            <button className=\"editOradd\" onClick={this.props.editMode ? this.editM : this.add}>\r\n              {this.props.editMode ? \"Edit\" : \"Add Movie\"}\r\n            </button>\r\n          </Modal.Footer>\r\n        </Modal>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    addNewMovie: newMovie => dispatch(AddMovie(newMovie)),\r\n    EditMovie: (id, updatedMovie) => dispatch(EditMovie(id, updatedMovie))\r\n  }\r\n}\r\n\r\nexport default connect(null, mapDispatchToProps)(AddMovieModal);","import {ADD_MOVIE, DELETE_MOVIE, GET_KEYWORD, GET_RATING, EDIT_MOVIE} from './Types'\r\n\r\nexport const AddMovie = newMovie => {\r\n    return {\r\n        type: ADD_MOVIE,\r\n        payload: newMovie\r\n    };\r\n};\r\n\r\nexport const DeleteMovie = id => {\r\n    return {\r\n        type: DELETE_MOVIE,\r\n        payload: id\r\n    };\r\n};\r\n\r\nexport const getKeyword = keyword => {\r\n    return {\r\n        type: GET_KEYWORD,\r\n        payload: keyword\r\n    };\r\n};\r\n\r\nexport const getRating = rating => {\r\n    return {\r\n        type: GET_RATING,\r\n        payload: rating\r\n    };\r\n};\r\n\r\nexport const EditMovie = (id , updatedMovie) => {\r\n    return {\r\n        type: EDIT_MOVIE,\r\n        payload: {id , updatedMovie}\r\n    };\r\n};","export const ADD_MOVIE = 'ADD_MOVIE';\r\nexport const DELETE_MOVIE = 'DELETE_MOVIE';\r\nexport const GET_KEYWORD = 'GET_KEYWORD';\r\nexport const GET_RATING = 'GET_RATING';\r\nexport const EDIT_MOVIE = 'EDIT_MOVIE';","import React from 'react';\r\nimport StarRatingComponent from 'react-star-rating-component';\r\nimport { connect } from 'react-redux';\r\nimport { DeleteMovie } from '../Actions/Actions';\r\nimport AddMovieModal from './AddMovieModal';\r\nimport {Link} from 'react-router-dom';\r\n\r\nconst MovieCard = ({ movie, deleteM }) => {\r\n    return (\r\n        <div className=\"card\">\r\n            <img className=\"movieImg\" src={movie.image} />\r\n            <div className=\"hoverText\">\r\n              <p className=\"movieText\">{movie.name} <br /> {movie.year}</p>\r\n            <div className=\"movieRating\">\r\n                <StarRatingComponent\r\n                    name=\"rate1\"\r\n                    starCount={5}\r\n                    value={movie.rating} />\r\n            </div>\r\n            <Link to={`/movie/${movie.id}`}>\r\n            {/* <button className=\"descMovie\">Description</button> */}\r\n            <i class=\"fas fa-info infoIcon\"></i>\r\n        </Link>\r\n            <div className=\"deleteAndedit\">\r\n                {/* <button className=\"deleteMovie\" onClick={() => deleteM(movie.id)}>Remove</button> */}\r\n                <i className=\"far fa-trash-alt delIcon\"onClick={() => deleteM(movie.id)} ></i>\r\n                <AddMovieModal editMode={true} movieToEdit={movie} className=\"edit\"/>\r\n            </div>  \r\n            </div>\r\n        </div>\r\n    );\r\n}\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        deleteM: id => dispatch(DeleteMovie(id))\r\n    };\r\n};\r\n\r\nexport default connect(null, mapDispatchToProps)(MovieCard);","import React, { Component } from 'react'\r\nimport MovieCard from './MovieCard'\r\nimport { connect } from 'react-redux'\r\n\r\n\r\nclass MovieList extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {};\r\n  }\r\n  render() {\r\n    return (\r\n      <div className=\"movieList\">\r\n        {this.props.AllData.movies.filter(el =>\r\n          el.rating >= this.props.AllData.rating &&\r\n          el.name.toLowerCase().includes(this.props.AllData.keyword.trim().toLowerCase())).map(\r\n            el => (<MovieCard movie={el} />\r\n            ))}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    AllData: state.MovieReducers\r\n  };\r\n};\r\n\r\n\r\nexport default connect(mapStateToProps)(MovieList);","import React, { Component } from 'react';\r\nimport { Form, Button } from 'react-bootstrap';\r\nimport { connect } from 'react-redux';\r\nimport { getKeyword, getRating } from '../Actions/Actions';\r\nimport StarRatingComponent from \"react-star-rating-component\";\r\n\r\n\r\nclass Filter extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            rating: 1,\r\n            text: \"\"\r\n        };\r\n    }\r\n    onStarClick = (nextValue, prevValue, name) => {\r\n        this.setState({ rating: nextValue },\r\n            () => this.props.getRating(this.state.rating)\r\n        );\r\n    }\r\n    handleChange = e => {\r\n        this.setState({ text: e.target.value },\r\n            () => this.props.setKeyword(this.state.text)\r\n        );\r\n    };\r\n    render() {\r\n        return (\r\n            <div>\r\n            <Form>\r\n                <Form.Control\r\n                    type=\"text\"\r\n                    placeholder=\"Search for a Movie\"\r\n                    className=\"movieSearch\"\r\n                    onChange={this.handleChange}\r\n                />\r\n            </Form>\r\n                <StarRatingComponent\r\n                className=\"movieRating\"\r\n                name=\"rate1\"\r\n                starCount={5}\r\n                value={this.state.rating}\r\n                onStarClick={this.onStarClick}\r\n            />\r\n                   </div>\r\n        );\r\n    }\r\n}\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        setKeyword: keyword => dispatch(getKeyword(keyword)),\r\n        getRating: rating => dispatch(getRating(rating))\r\n    }\r\n}\r\n\r\nexport default connect(null, mapDispatchToProps)(Filter);","import React from 'react';\nimport './App.css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport MovieList from './Components/MovieList';\nimport AddMovieModal from './Components/AddMovieModal';\nimport Filter from './Components/Filter'\n\nfunction App() {\n  return (\n    <div className=\"App container\">\n      <Filter />\n      <MovieList />\n      <AddMovieModal editMode={false} />\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import { v4 as uuidv4 } from 'uuid'\r\nimport { ADD_MOVIE, DELETE_MOVIE, GET_KEYWORD, GET_RATING, EDIT_MOVIE } from '../Actions/Types'\r\n\r\nconst initState = [\r\n    {\r\n        id: uuidv4(),\r\n        name: 'Inception',\r\n        image: 'https://i.pinimg.com/originals/b3/12/09/b31209cd43ba1bde909ebdd01112caf8.jpg',\r\n        rating: 5,\r\n        year: '2010',\r\n        description: \"Inception is a 2010 science fiction action film written and directed by Christopher Nolan, who also produced the film with his wife, Emma Thomas. The film stars Leonardo DiCaprio as a professional thief who steals information by infiltrating the subconscious of his targets.\",\r\n        trailer:\"https://www.youtube.com/watch?v=YoHD9XEInc0\"\r\n    },\r\n    {\r\n        id: uuidv4(),\r\n        name: 'Lord of the Rings: The Two Towers',\r\n        image: 'https://i.pinimg.com/originals/f7/bf/92/f7bf9292cf46b7d62942e4726234f34d.jpg',\r\n        rating: 4,\r\n        year: '2002',\r\n        description: \"The two towers between Mordor and Isengard, Barad-dûr and Orthanc, have united in their lust for destruction. The corrupt wizard Saruman, under the power of the Dark Lord Sauron, and his slimy assistant, Gríma Wormtongue, have created a grand Uruk-hai army bent on the destruction of Man and Middle-earth.\",\r\n        trailer:\"https://www.youtube.com/watch?v=LbfMDwc4azU\"\r\n    },\r\n    {\r\n        id: uuidv4(),\r\n        name: 'The Matrix',\r\n        image: 'https://i.pinimg.com/originals/0b/c3/5e/0bc35e809c394a1c56dd23fd33e55de4.jpg',\r\n        rating: 3,\r\n        year: '1999',\r\n        description: \"The Matrix is a computer-generated dream world designed to keep these humans under control. Humans are kept sedated, effectively living a virtual life. Neo awakens in a bed back on Morpheus's ship, and Morpheus further explains that one man was born into the Matrix with the power to change anything in it.\",\r\n        trailer:\"https://www.youtube.com/watch?v=vKQi3bBA1y8\"\r\n    }\r\n]\r\n\r\nconst MovieReducers = (state = { movies: initState, keyword: \"\", rating: 1 }, action) => {\r\n    switch (action.type) {\r\n        case ADD_MOVIE:\r\n            return { ...state, movies: state.movies.concat(action.payload) };\r\n        case DELETE_MOVIE:\r\n            return { ...state, movies: state.movies.filter(el => el.id !== action.payload) };\r\n        case GET_KEYWORD:\r\n            return { ...state, keyword: action.payload };\r\n        case GET_RATING:\r\n            return { ...state, rating: action.payload };\r\n        case EDIT_MOVIE:\r\n            return {\r\n                ...state, movies: state.movies.map(el =>\r\n                    el.id === action.payload.id ? { ...el, ...action.payload.updatedMovie } : el)\r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport default MovieReducers","import {combineReducers} from 'redux'\r\nimport MovieReducers from './MovieReducers'\r\n\r\nexport default combineReducers({MovieReducers})","import rootReducer from './Reducers'\r\nimport { createStore } from 'redux'\r\n\r\nexport default createStore(\r\n    rootReducer,\r\n    window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\r\n)","import React, { Component } from \"react\";\r\nimport StarRatingComponent from \"react-star-rating-component\";\r\nimport { connect } from \"react-redux\";\r\nimport { Link } from 'react-router-dom';\r\n\r\nclass Description extends Component {\r\n  state = {\r\n    movie: {\r\n      name: \"\",\r\n      rating: 1,\r\n      year: \"\",\r\n      image: \"\",\r\n      description: \"\",\r\n      trailer: \"\"\r\n    }\r\n  };\r\n  UNSAFE_componentWillMount() {\r\n    this.setState({\r\n      movie: this.props.movies.filter(\r\n        el => el.id == this.props.match.params.id\r\n      )[0]\r\n    });\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"cardDescription\">\r\n        <p className=\"titleDescription\">\r\n          {this.state.movie.name} <br /> {this.state.movie.year}\r\n        </p>\r\n        <div className=\"movieRating\">\r\n          <StarRatingComponent\r\n            name=\"rate1\"\r\n            starCount={5}\r\n            value={this.state.movie.rating}\r\n          />\r\n        </div>\r\n        <p className=\"textDescription\">{this.state.movie.description}</p>\r\n        {/* <img className=\"imageDescription\" src={this.state.movie.image} /> */}\r\n        <div className=\"btnDescription\">\r\n          <a href={this.state.movie.trailer}><i className=\"fa fa-youtube-play fa-2x yt\" style={{ color: \"red\" }} ></i></a>\r\n          <Link to=\"/\">\r\n            {/* <button className=\"movieHome\">Home</button> */}\r\n            <i class=\"fas fa-home fa-2x\" style={{ color: \"red\" }}></i>\r\n          </Link>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    movies: state.MovieReducers.movies\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps)(Description);","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport {Provider} from 'react-redux';\nimport store from './store';\nimport {BrowserRouter, Route} from 'react-router-dom';\nimport Description from './Components/Description';\n\nReactDOM.render(\n  <Provider store = {store}>\n    <BrowserRouter>\n    <Route exact path=\"/\" component={App}/>\n    <Route path=\"/movie/:id\" component={Description}/>\n    </BrowserRouter>\n  </Provider>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}